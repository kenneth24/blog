@model BlogApplication.Models.PostViewModel
@{
    ViewBag.Title = "EditPost";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("EditPost", "Blog", FormMethod.Post, new { role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="editPostContainer">
        <h4 class="forMarginTop">This is optional if you want to add category on your blog post</h4>
        <table>
            @if (Model.PostCategories.Count() > 0)
            {
                <tr>
                    <td><a href="@Url.Action("AddCategoryToPost", "Blog", new {  postid = Model.ID})" class="btn btn-primary pull-left" title="Add Video">Add New Category</a></td>
                </tr>
                <tr>
                    <td class="editPostCategories">
                        @foreach (var cat in Model.PostCategories)
                        {
                            <div class="editPostCatInp">
                                <div class="catName">@cat.Name</div>
                                <a href="@Url.Action("RemoveCategoryFromPost", "Blog", new { postid = Model.ID,slug=Model.UrlSeo,catName=cat.Name })" class="addremoveBtn" title="Add Video"><img src="@Url.Content("~/Content/images/post/remove.png")" width="25" height="25" alt="add" /></a>
                            </div>
                        }
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>Category :</td>
                    <td colspan="2"><a href="@Url.Action("AddCategoryToPost", "Blog", new { postid = Model.ID})" class="addremoveBtn" title="Add Category">Add Category</a></td>
                </tr>
            }
        </table>

        
        <h4 class="forMarginTop">Friendly Reminder: Always double check your form before you post it</h4>

        <form data-toggle="validator" role="form">

            <div class="form-group" style="display: none;">
                <label for="inputName" class="control-label">ID</label>
                @Html.TextBoxFor(m => m.ID, new { @class = "editPostIdInp", @readonly = "readonly" })
            </div>

            <div class="form-group" style="display: none;">
                <label for="inputName" class="control-label">ID</label>
                @Html.TextBoxFor(m => m.ID, new { @class = "editPostIdInp", @readonly = "readonly" })
            </div>

            <div class="form-group">
                <label for="title" class="control-label">Title</label>
                @Html.TextBoxFor(m => (m.Title), new { @class = "form-control", @id = "title", @required = "required" })
            </div>

            <div class="form-group">
                <label for="meta" class="control-label">Meta</label>
                @Html.TextBoxFor(m => m.Meta, new { @class = "form-control", @id = "meta", @required = "required" })
            </div>

            <div class="form-group">
                <label for="url" class="control-label">UrlSeo</label>
                @Html.TextBoxFor(m => m.UrlSeo, new { @class = "form-control", @id = "url", @required = "required" })
            </div>

            <div class="form-group" style="width: 50%">
                <label for="shortDescription" class="control-label">Short Description</label>
                @Html.TextAreaFor(m => m.ShortDescription, new { @class = "ckEd", @id = "editor1", Value = Model.ShortDescription })
                <script>
                    CKEDITOR.replace('editor1');
                </script>
            </div>

            <div class="form-group" style="width: 50%">
                <label for="body" class="control-label">Body</label>
                @Html.TextAreaFor(m => m.Body, new { @class = "ckEd", @id = "editor2", Value = Model.Body })
                <script>
                    CKEDITOR.replace('editor2');
                </script>
            </div>

            <input class="btn btn-primary pull-left" type="submit" value="Submit" />

        </form>
    </div>
}

